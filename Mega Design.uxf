<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>160</y>
      <w>380</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>IntNode
--
- nodeData : int
- nodePointer : IntNode *
--
+ getNodeData() : int
+ getNodePointer() : IntNode*
+ setNodeData(int value) : void
+ setNodePointer(IntNode * next) : void

+ IntNode() : init
+ IntNode(int value) : init
+ IntNode(int nodeData, IntNode * nextNode) : init

bg=magenta</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>20</x>
      <y>390</y>
      <w>340</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>IntNodeArray
--
- size : int
- front : IntNode *
--
+ IntNodeArray(int size) : init
+ setAtIndex(int index, int value) : void
+ getFromIndex(int index) : int
+ getSize() : int

bg=magenta</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>120</y>
      <w>490</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>Node&lt;Type&gt;
--
- nodeData : Type
- nodePointer : Node&lt;Type&gt; *
--
+ Node() : init
+ Node(Type value) : init
+ Node(Type data, Node&lt;Type&gt; * pointer) : init

+ getNodeData() : Type
+ getNodePointer() : Node&lt;Type&gt; *
+ setNodeData(Type value) : void
+ setNodePointer(Node&lt;Type&gt; * next) : void

bg=cyan</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>470</x>
      <y>390</y>
      <w>460</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>Array&lt;Type&gt;
--
- size : int
- font : Node&lt;Type&gt; *
--
+ Array(): init
+ Array(int size) : init

+ ~Array&lt;Type&gt;() : destructor
+ Array&lt;Type&gt;(const Array&lt;Type&gt; &amp; toBeCopied) : copy init

+ getSize() const : int
+ getFront() const : Node&lt;Type&gt; *
+ setAtIndex(int index, Type value) : void
+ getFromIndex(int index) : Type

bg=cyan</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>960</x>
      <y>160</y>
      <w>340</w>
      <h>340</h>
    </coordinates>
    <panel_attributes>Model :: List&lt;Type&gt;
--
- size : int
- front : Node&lt;Type&gt; *
--
+List&lt;Type&gt;() : constructor
+Lis&lt;Type&gt;(const List&lt;Type&gt; &amp; source): copy constructor
+~List&lt;Type&gt;() : destructor

+addAtIndex(int index, Type value) : void
+add(Type value): void
+remove(int index) : Type
+setAtIndex(int index, Type data) : Type
+getFromIndex(int index, Type data) : Type
+contains(Type data) : bool
+getSize() const : int
+getFront() const : Node&lt;Type&gt;; *

bg=green</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
